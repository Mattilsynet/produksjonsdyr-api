name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Hva skal vi kalle denne releasen?'
        required: true
        default: "SNAPSHOT"

jobs:
  release:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true

      - name: Setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo Release started by $GITHUB_ACTOR
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
          git config --global user.email "team-produksjonsdyr@mattilsynet.no"
          git config --global user.name "$GITHUB_ACTOR"

      - name: Bump version and push tag
        id: create_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: openApiGenerate
        run: ./gradlew openApiGenerate-task
      - name: Publish library
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
        run: |
          echo Release version ${{ steps.create_version.outputs.new_version }} of produksjonsdyr-api
          ./gradlew publish -PreleaseVersion=${{ steps.create_version.outputs.new_version }}

      - name: Create a GitHub release from master
        if: "${{ github.event.inputs.level == '' }}"
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.create_version.outputs.new_tag }}
          name: Release ${{ steps.create_version.outputs.new_tag }}
          body: ${{ steps.create_version.outputs.changelog }}

      - name: Create a GitHub release from branch
        if: "${{ github.event.inputs.level != '' }}"
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.event.inputs.release_tag }}
          name: Release ${{ github.event.inputs.release_tag }}
          body: ${{ github.event.inputs.release_tag }}
          
